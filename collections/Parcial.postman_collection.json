{
	"info": {
		"_postman_id": "8448b96a-faa6-4500-b311-8f738270e747",
		"name": "Parcial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12518840"
	},
	"item": [
		{
			"name": "Productos",
			"item": [
				{
					"name": "Add Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.nombre).to.exist;",
									"    pm.expect(responseData.precio).to.exist;",
									"    pm.expect(responseData.tipo).to.exist;",
									"    pm.expect(responseData.id).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Nombre is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.nombre).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Nombre should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Precio is a non-negative integer\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.precio).to.be.a('number');",
									"  pm.expect(responseData.precio).to.be.at.least(0, \"Precio should be a non-negative integer\");",
									"});",
									"",
									"",
									"pm.test(\"Tipo is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.tipo).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Tipo should be a non-empty string\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"{{$randomProductName}}\",\n    \"precio\": 12000,\n    \"tipo\": \"Perecedoro\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/products",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, nombre, precio, and tipo\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    ",
									"    responseData.forEach(function(product) {",
									"        pm.expect(product.id).to.exist;",
									"        pm.expect(product.nombre).to.exist;",
									"        pm.expect(product.precio).to.exist;",
									"        pm.expect(product.tipo).to.exist;",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Price is a non-negative number\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    responseData.forEach(function(product) {",
									"        pm.expect(product.precio).to.be.a('number').and.to.be.at.least(0);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Response time is within an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"const responseData = pm.response.json()[0];",
									"pm.collectionVariables.set(\"producto_id\", responseData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/products",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is within an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/products/{{producto_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"products",
								"{{producto_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a producto",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"{{$randomCompanyName}}\",\n    \"precio\": 16000,\n    \"tipo\": \"No perecedero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/products/{{producto_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"products",
								"{{producto_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a producto",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/products/{{producto_id}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"products",
								"{{producto_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "producto_id",
			"value": "",
			"type": "string"
		}
	]
}